# 1371. Find the Longest Substring Containing Vowels in Even Counts
# python
#1
class Solution(object):
    def findTheLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        mapy = [-2] * 32
        mapy[0] = -1

        max_len = 0
        mask = 0

        for i, char in enumerate(s):
            if char == 'a':
                mask ^= 1
            elif char == 'e':
                mask ^= 2
            elif char == 'i':
                mask ^= 4
            elif char == 'o':
                mask ^= 8
            elif char == 'u':
                mask ^= 16

            prev = mapy[mask]
            if prev == -2:
                mapy[mask] = i
            else:
                max_len = max(max_len, i - prev)

        return max_len


#2
class Solution(object):
    def findTheLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        vow=[-1]*26
        vow[0]=0
        vow[ord('e')-ord('a')]=1
        vow[ord('i')-ord('a')]=2
        vow[ord('o')-ord('a')]=3
        vow[ord('u')-ord('a')]=4
        n=len(s)
        first_seen=[-1]*32
        first_seen[0]=0
        curr=0
        Len=0
        for i in range(n):
            x=vow[ord(s[i])-ord('a')]
            if x!=-1: curr^=(1<<x)
            if first_seen[curr]==-1: first_seen[curr]=i+1
            Len=max(Len, i+1-first_seen[curr])
        return Len
